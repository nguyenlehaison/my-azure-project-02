# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
# vm:hsonnlVM
# app:hsonnlAppService
# resourceId=14fe3361-dbb1-459b-b7ba-234b932a0fb8
# PAT: nwfxos3kv4dj7xpatouxrow7dw4gzxqniz4jtfhdpptcebwourla
# poolName:hsonnlPool
# agent: hsonnlVM
# env: hsonnlEnv
# resource: hsonnlVM
trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '14fe3361-dbb1-459b-b7ba-234b932a0fb8'

  # Web app name
  webAppName: 'hsonnlAppService'

  poolName: 'hsonnlPool'
  # Agent VM image name
  vmImageName: 'hsonnlVM'

  # Environment name
  environmentName: 'hsonnlEnv'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.7
  pythonVersion: '3.7'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      name: $(poolName)
      vmImage: $(vmImageName)
    steps:
    - script: |
        python3.7 -m venv antenv
        source antenv/bin/activate
        python3.7 -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      name: $(poolName)
      vmImage: $(vmImageName)
    environment:
      name: 'hsonnlEnv'
      resourceName: 'hsonnlVM'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip